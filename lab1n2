#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;

double safePowRoot(double base, double expVal) {
    if (base >= 0) {
        return pow(base, expVal);
    }
    else {
        double intPart;
        if (modf(expVal, &intPart) == 0.0) {
            return pow(base, expVal);
        }
        return pow(fabs(base), expVal);
    }
}

double calcA(double x, double y, double z, double b) {
    double numerator = sqrt(pow(x * x - z, 0.3)) - cbrt(fabs(y + 2 * b));
    double denominator = 1.0 + x + (pow(y, 2) / 2.0) + (pow(z, 3) / 6.0);
    return numerator / denominator;
}

double calcB(double x, double y, double z) {
    double base = x * x + z;
    double part1 = y + atan(safePowRoot(base, 0.1));
    double part2 = (3.0 / x) + sin(2.0 * pow(y + z, 3)) + y * exp((-x + z) / (y + z));
    return x * (part1 / part2);
}

int main() {
    double y = 0.47;
    double z = -1.32;
    double b = 2.0;

    double x_start = -1.0;
    double x_end = 1.0;
    double dx = 0.2;

    cout << fixed << setprecision(6);
    cout << " Tabulation of functions a(x) and b(x):\n";
    cout << "----------------------------------------\n";
    cout << "    x        a(x)         b(x)\n";
    cout << "----------------------------------------\n";

    for (double x = x_start; x <= x_end + 1e-9; x += dx) {
        if (fabs(x) < 1e-12) { 
            cout << setw(8) << x 
                 << setw(12) << "nan"
                 << setw(14) << "nan" << endl;
        } else {
            cout << setw(8) << x 
                 << setw(12) << calcA(x, y, z, b) 
                 << setw(14) << calcB(x, y, z) << endl;
        }
    }

    return 0;
}
