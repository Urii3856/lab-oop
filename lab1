#include <iostream>
#include <cmath>
using namespace std;

double safePowRoot(double base, double expVal) {
    if (base >= 0) {
        return pow(base, expVal);
    }
    else {
        double intPart;
        if (modf(expVal, &intPart) == 0.0) {
            return pow(base, expVal);
        }
        return pow(fabs(base), expVal);
    }
}

double calcA(double x, double y, double z, double b) {
    double numerator = sqrt(pow(x * x - z, 0.3)) - cbrt(fabs(y + 2 * b));
    double denominator = 1.0 + x + (pow(y, 2) / 2.0) + (pow(z, 3) / 6.0);
    return numerator / denominator;
}

double calcB(double x, double y, double z) {
    double base = x * x + z;
    double part1 = y + atan(safePowRoot(base, 0.1));
    double part2 = (3.0 / x) + sin(2.0 * pow(y + z, 3)) + y * exp((-x + z) / (y + z));
    return x * (part1 / part2);
}

int main() {
    double x = 0.48;
    double y = 0.47;
    double z = -1.32;
    double b = 2.0;

    cout << "Variant 1" << endl;
    cout << "x = " << x << ", y = " << y << ", z = " << z << ", b = " << b << endl;
    cout << "a[x,y,z,b] = " << calcA(x, y, z, b) << endl;
    cout << "b[x,y,z]   = " << calcB(x, y, z) << endl;

    return 0;
}
